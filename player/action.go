package player

import (
	"bufio"
	"fmt"
	"helpGame"
	"os"
	"rooms"
)

func actionScan() string {
	in := bufio.NewScanner(os.Stdin)
	in.Scan()
	return in.Text()
}
func actionSwitch(idRoom uint16, player paramPlayer) {
	exits, description, nameNPC := rooms.EnterRoom(idRoom)
	rooms.Description(description, nameNPC)
	rooms.ExitsRooms(exits)
	action := ""
	for {
		if player.Hp == 0 {
			fmt.Println("—É–ø—Å....")
			Start()
		}
		fmt.Printf("‚ù§ %d üß™ %d. –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è?\n", player.Hp, player.Mp)
		action = instructions(actionScan())
		switch action {
		case "err":
			fmt.Println("–£—Ç–æ—á–Ω–∏—Ç–µ...")
		case "—Å–µ–≤–µ—Ä", "–≤–æ—Å—Ç–æ–∫", "—é–≥", "–∑–∞–ø–∞–¥":
			fmt.Printf("–í—ã –ø–æ—à–ª–∏ –Ω–∞ %s... ", action)
			if exits[action] != 0 {
				exits, description, nameNPC = rooms.EnterRoom(exits[action])
				rooms.Description(description, nameNPC)
				rooms.ExitsRooms(exits)
			} else {
				fmt.Println("–ù–æ —Ç—É–¥–∞ –Ω–µ—Ç –ø—Ä–æ—Ö–æ–¥–∞")
			}
		case "description":
			rooms.Description(description, nameNPC)
			rooms.ExitsRooms(exits)
		case "exitGame":
			fmt.Println("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?")
			var exitGame string
			fmt.Scan(&exitGame)
			if exitGame == "–¥–∞" {
				fmt.Println("–í—ã –≤—ã—à–ª–∏")
				return
			}
		case "attack":
			if nameNPC != "" {
				fmt.Printf("–í—ã –∞—Ç–∞–∫–æ–≤–∞–ª–∏ %s\n", nameNPC)
			} else {
				fmt.Println("–¢—É—Ç –Ω–µ—Ç –Ω–∏–∫–æ–≥–æ")
			}
		case "help":
			helpGame.HelpGame()
		}
	}
}
